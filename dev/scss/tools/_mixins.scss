$browser-context: 16; // Default

@function calculateRem($size) {
	$remSize: ($size / 16px);
	@return #{$remSize}rem;
}
@function em($pixels, $context: $browser-context) {
  @return #{$pixels/$context}em
}

@mixin fluid-type($min-font-size: 12px, $max-font-size: 21px, $lower-range: 420px, $upper-range: 1170px) {

  font-size: calc(#{$min-font-size} + #{(($max-font-size / ($max-font-size * 0 + 1)) - ($min-font-size / ($min-font-size * 0 + 1)))} * ( (100vw - #{$lower-range}) / #{(($upper-range / ($upper-range * 0 + 1)) - ($lower-range / ($lower-range * 0 + 1)))}));

  @media screen and (max-width: $lower-range) {
    font-size: $min-font-size;
  }
  @media screen and (min-width: $upper-range){
    font-size: $max-font-size;
  }
}

@mixin font-size($fs-map) {
  @each $fs-breakpoint, $fs-font-size in $fs-map {
    @if $fs-breakpoint == null {
      font-size: $fs-font-size;
    }
    @else {
      @media screen and (min-width: $fs-breakpoint) {
        font-size: $fs-font-size;
      }
    }
  }
}

@mixin blocksize ($block_size) {
  height: $block_size;
  width: $block_size;
  min-height: $block_size;
  min-width: $block_size;
  max-height: $block_size;
  max-width: $block_size;
  &:after{
    content: "";
    display: block;
    padding-bottom: 100%;
  }
}

@mixin titlesize($title_size) {
  width: $title_size;
  min-width: $title_size;
  max-width: $title_size;
  &:after{
    content: "";
    display: block;
  }
}
